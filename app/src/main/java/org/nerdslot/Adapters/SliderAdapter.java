package org.nerdslot.Adapters;import android.annotation.SuppressLint;import android.content.Context;import android.net.Uri;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import androidx.core.content.ContextCompat;import org.nerdslot.R;import java.io.File;import java.util.ArrayList;public class SliderAdapter extends BaseAdapter {    private Context ctx;    private ArrayList<File> images;    private LayoutInflater inflater;    private int dotsCount;    private ImageView[] dots;    private LinearLayout sliderDotsPanel;    public SliderAdapter(Context context, ArrayList<File> images, LinearLayout sliderDotsPanel) {        this.ctx = context;        this.images = images;        this.sliderDotsPanel = sliderDotsPanel;        this.inflater = LayoutInflater.from(context);        setIndicators();    }    @Override    public int getCount() {        return images.size();    }    @Override    public Object getItem(int position) {        return images.get(position);    }    @Override    public long getItemId(int position) {        return 0;    }    @SuppressLint("ViewHolder")    @Override    public View getView(int position, View convertView, ViewGroup parent) {        try {            convertView = inflater.inflate(R.layout.slider_template, parent, false);        } catch (Exception e) {            e.printStackTrace();            Log.i("inflater-err", e.getMessage());        }        ImageView featuredImages = convertView.findViewById(R.id.sliderImage);        featuredImages.setImageURI(Uri.fromFile(new File(images.get(position).toURI())));        // Sync the Indicators withRelationships the Flipped images        for (int j = 0; j < dotsCount; j++) {            dots[j].setImageDrawable(ContextCompat.getDrawable(ctx, R.drawable.inactive_indicator));        }        dots[position].setImageDrawable(ContextCompat.getDrawable(ctx, R.drawable.active_indicator));        return convertView;    }    private void setIndicators() {        dotsCount = getCount();        dots = new ImageView[dotsCount];        for (int i = 0; i < dotsCount; i++) {            dots[i] = new ImageView(ctx);            dots[i].setImageDrawable(ContextCompat.getDrawable(ctx, R.drawable.inactive_indicator));            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);            layoutParams.setMargins(8, 0, 8, 0);            sliderDotsPanel.addView(dots[i], layoutParams);        }        dots[0].setImageDrawable(ContextCompat.getDrawable(ctx, R.drawable.active_indicator));    }}